// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: depth/depth.proto

package depth

import (
	common "github.com/warmplanet/proto/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepthLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price  float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Amount float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DepthLevel) Reset() {
	*x = DepthLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepthLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthLevel) ProtoMessage() {}

func (x *DepthLevel) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthLevel.ProtoReflect.Descriptor instead.
func (*DepthLevel) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{0}
}

func (x *DepthLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DepthLevel) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DepthLevelEx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     float64           `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Amount    float64           `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Symbol    string            `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PriceAvg  float64           `protobuf:"fixed64,4,opt,name=price_avg,json=priceAvg,proto3" json:"price_avg,omitempty"`
	AmountSum float64           `protobuf:"fixed64,5,opt,name=amount_sum,json=amountSum,proto3" json:"amount_sum,omitempty"`
	Exchange  common.Exchange   `protobuf:"varint,6,opt,name=exchange,proto3,enum=Exchange" json:"exchange,omitempty"`
	Market    common.Market     `protobuf:"varint,7,opt,name=market,proto3,enum=Market" json:"market,omitempty"`
	Type      common.SymbolType `protobuf:"varint,8,opt,name=type,proto3,enum=SymbolType" json:"type,omitempty"`
}

func (x *DepthLevelEx) Reset() {
	*x = DepthLevelEx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepthLevelEx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthLevelEx) ProtoMessage() {}

func (x *DepthLevelEx) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthLevelEx.ProtoReflect.Descriptor instead.
func (*DepthLevelEx) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{1}
}

func (x *DepthLevelEx) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DepthLevelEx) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepthLevelEx) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DepthLevelEx) GetPriceAvg() float64 {
	if x != nil {
		return x.PriceAvg
	}
	return 0
}

func (x *DepthLevelEx) GetAmountSum() float64 {
	if x != nil {
		return x.AmountSum
	}
	return 0
}

func (x *DepthLevelEx) GetExchange() common.Exchange {
	if x != nil {
		return x.Exchange
	}
	return common.Exchange(0)
}

func (x *DepthLevelEx) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *DepthLevelEx) GetType() common.SymbolType {
	if x != nil {
		return x.Type
	}
	return common.SymbolType(0)
}

// 统一转码后的Depth数据
type Depth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr          *common.MsgHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Exchange     common.Exchange   `protobuf:"varint,2,opt,name=exchange,proto3,enum=Exchange" json:"exchange,omitempty"`
	ExchangeAddr string            `protobuf:"bytes,3,opt,name=exchange_addr,json=exchangeAddr,proto3" json:"exchange_addr,omitempty"` // 可选，一般只有dex exchcange设置
	Market       common.Market     `protobuf:"varint,4,opt,name=market,proto3,enum=Market" json:"market,omitempty"`
	Type         common.SymbolType `protobuf:"varint,5,opt,name=type,proto3,enum=SymbolType" json:"type,omitempty"`
	Symbol       string            `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeExchange uint64            `protobuf:"fixed64,7,opt,name=time_exchange,json=timeExchange,proto3" json:"time_exchange,omitempty"` // microsecond
	TimeReceive  uint64            `protobuf:"fixed64,8,opt,name=time_receive,json=timeReceive,proto3" json:"time_receive,omitempty"`    // microsecond
	TimeOperate  uint64            `protobuf:"fixed64,9,opt,name=time_operate,json=timeOperate,proto3" json:"time_operate,omitempty"`    // microsecond
	Bids         []*DepthLevel     `protobuf:"bytes,20,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks         []*DepthLevel     `protobuf:"bytes,21,rep,name=asks,proto3" json:"asks,omitempty"`
}

func (x *Depth) Reset() {
	*x = Depth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{2}
}

func (x *Depth) GetHdr() *common.MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *Depth) GetExchange() common.Exchange {
	if x != nil {
		return x.Exchange
	}
	return common.Exchange(0)
}

func (x *Depth) GetExchangeAddr() string {
	if x != nil {
		return x.ExchangeAddr
	}
	return ""
}

func (x *Depth) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *Depth) GetType() common.SymbolType {
	if x != nil {
		return x.Type
	}
	return common.SymbolType(0)
}

func (x *Depth) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Depth) GetTimeExchange() uint64 {
	if x != nil {
		return x.TimeExchange
	}
	return 0
}

func (x *Depth) GetTimeReceive() uint64 {
	if x != nil {
		return x.TimeReceive
	}
	return 0
}

func (x *Depth) GetTimeOperate() uint64 {
	if x != nil {
		return x.TimeOperate
	}
	return 0
}

func (x *Depth) GetBids() []*DepthLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *Depth) GetAsks() []*DepthLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

type DepthRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange common.Exchange `protobuf:"varint,1,opt,name=exchange,proto3,enum=Exchange" json:"exchange,omitempty"`
	//  string exchange_addr = 2; // 可选，一般只有dex exchcange设置
	PriceAvg   float64         `protobuf:"fixed64,3,opt,name=price_avg,json=priceAvg,proto3" json:"price_avg,omitempty"`
	AmountSum  float64         `protobuf:"fixed64,4,opt,name=amount_sum,json=amountSum,proto3" json:"amount_sum,omitempty"`
	Path       []*DepthLevelEx `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
	AmountUsdt float64         `protobuf:"fixed64,6,opt,name=amount_usdt,json=amountUsdt,proto3" json:"amount_usdt,omitempty"`
}

func (x *DepthRoute) Reset() {
	*x = DepthRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepthRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthRoute) ProtoMessage() {}

func (x *DepthRoute) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthRoute.ProtoReflect.Descriptor instead.
func (*DepthRoute) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{3}
}

func (x *DepthRoute) GetExchange() common.Exchange {
	if x != nil {
		return x.Exchange
	}
	return common.Exchange(0)
}

func (x *DepthRoute) GetPriceAvg() float64 {
	if x != nil {
		return x.PriceAvg
	}
	return 0
}

func (x *DepthRoute) GetAmountSum() float64 {
	if x != nil {
		return x.AmountSum
	}
	return 0
}

func (x *DepthRoute) GetPath() []*DepthLevelEx {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *DepthRoute) GetAmountUsdt() float64 {
	if x != nil {
		return x.AmountUsdt
	}
	return 0
}

type CombinedDepthLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     float64       `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Amount    float64       `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PriceAvg  float64       `protobuf:"fixed64,3,opt,name=price_avg,json=priceAvg,proto3" json:"price_avg,omitempty"`
	AmountSum float64       `protobuf:"fixed64,4,opt,name=amount_sum,json=amountSum,proto3" json:"amount_sum,omitempty"`
	Amounts   []*DepthRoute `protobuf:"bytes,10,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *CombinedDepthLevel) Reset() {
	*x = CombinedDepthLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinedDepthLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinedDepthLevel) ProtoMessage() {}

func (x *CombinedDepthLevel) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinedDepthLevel.ProtoReflect.Descriptor instead.
func (*CombinedDepthLevel) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{4}
}

func (x *CombinedDepthLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CombinedDepthLevel) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CombinedDepthLevel) GetPriceAvg() float64 {
	if x != nil {
		return x.PriceAvg
	}
	return 0
}

func (x *CombinedDepthLevel) GetAmountSum() float64 {
	if x != nil {
		return x.AmountSum
	}
	return 0
}

func (x *CombinedDepthLevel) GetAmounts() []*DepthRoute {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type UpdateTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeExchange uint64 `protobuf:"fixed64,2,opt,name=time_exchange,json=timeExchange,proto3" json:"time_exchange,omitempty"` // microsecond
	TimeReceive  uint64 `protobuf:"fixed64,3,opt,name=time_receive,json=timeReceive,proto3" json:"time_receive,omitempty"`    // microsecond
	TimeOperate  uint64 `protobuf:"fixed64,4,opt,name=time_operate,json=timeOperate,proto3" json:"time_operate,omitempty"`    // microsecond
}

func (x *UpdateTime) Reset() {
	*x = UpdateTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTime) ProtoMessage() {}

func (x *UpdateTime) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTime.ProtoReflect.Descriptor instead.
func (*UpdateTime) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTime) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *UpdateTime) GetTimeExchange() uint64 {
	if x != nil {
		return x.TimeExchange
	}
	return 0
}

func (x *UpdateTime) GetTimeReceive() uint64 {
	if x != nil {
		return x.TimeReceive
	}
	return 0
}

func (x *UpdateTime) GetTimeOperate() uint64 {
	if x != nil {
		return x.TimeOperate
	}
	return 0
}

type RouteSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route []string `protobuf:"bytes,1,rep,name=route,proto3" json:"route,omitempty"`
	Side  []int32  `protobuf:"varint,2,rep,packed,name=side,proto3" json:"side,omitempty"`
}

func (x *RouteSide) Reset() {
	*x = RouteSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteSide) ProtoMessage() {}

func (x *RouteSide) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteSide.ProtoReflect.Descriptor instead.
func (*RouteSide) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{6}
}

func (x *RouteSide) GetRoute() []string {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RouteSide) GetSide() []int32 {
	if x != nil {
		return x.Side
	}
	return nil
}

// 深度合并后的Depth数据
type CombinedDepth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr          *common.MsgHeader     `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Exchange     common.Exchange       `protobuf:"varint,2,opt,name=exchange,proto3,enum=Exchange" json:"exchange,omitempty"`
	ExchangeAddr string                `protobuf:"bytes,3,opt,name=exchange_addr,json=exchangeAddr,proto3" json:"exchange_addr,omitempty"` // 可选，一般只有dex exchange设置
	Market       common.Market         `protobuf:"varint,4,opt,name=market,proto3,enum=Market" json:"market,omitempty"`
	Type         common.SymbolType     `protobuf:"varint,5,opt,name=type,proto3,enum=SymbolType" json:"type,omitempty"`
	Symbol       string                `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeReceive  uint64                `protobuf:"fixed64,7,opt,name=time_receive,json=timeReceive,proto3" json:"time_receive,omitempty"` // microsecond
	TimeOperate  uint64                `protobuf:"fixed64,8,opt,name=time_operate,json=timeOperate,proto3" json:"time_operate,omitempty"` // microsecond
	RouteSide    []*RouteSide          `protobuf:"bytes,9,rep,name=route_side,json=routeSide,proto3" json:"route_side,omitempty"`
	Bids         []*CombinedDepthLevel `protobuf:"bytes,20,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks         []*CombinedDepthLevel `protobuf:"bytes,21,rep,name=asks,proto3" json:"asks,omitempty"`
	TimeHandle   []*UpdateTime         `protobuf:"bytes,22,rep,name=time_handle,json=timeHandle,proto3" json:"time_handle,omitempty"`
}

func (x *CombinedDepth) Reset() {
	*x = CombinedDepth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinedDepth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinedDepth) ProtoMessage() {}

func (x *CombinedDepth) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinedDepth.ProtoReflect.Descriptor instead.
func (*CombinedDepth) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{7}
}

func (x *CombinedDepth) GetHdr() *common.MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *CombinedDepth) GetExchange() common.Exchange {
	if x != nil {
		return x.Exchange
	}
	return common.Exchange(0)
}

func (x *CombinedDepth) GetExchangeAddr() string {
	if x != nil {
		return x.ExchangeAddr
	}
	return ""
}

func (x *CombinedDepth) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *CombinedDepth) GetType() common.SymbolType {
	if x != nil {
		return x.Type
	}
	return common.SymbolType(0)
}

func (x *CombinedDepth) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CombinedDepth) GetTimeReceive() uint64 {
	if x != nil {
		return x.TimeReceive
	}
	return 0
}

func (x *CombinedDepth) GetTimeOperate() uint64 {
	if x != nil {
		return x.TimeOperate
	}
	return 0
}

func (x *CombinedDepth) GetRouteSide() []*RouteSide {
	if x != nil {
		return x.RouteSide
	}
	return nil
}

func (x *CombinedDepth) GetBids() []*CombinedDepthLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *CombinedDepth) GetAsks() []*CombinedDepthLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *CombinedDepth) GetTimeHandle() []*UpdateTime {
	if x != nil {
		return x.TimeHandle
	}
	return nil
}

// Trader订单执行报告
type TraderReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr          *common.MsgHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Exchange     common.Exchange   `protobuf:"varint,2,opt,name=exchange,proto3,enum=Exchange" json:"exchange,omitempty"`
	ExchangeAddr string            `protobuf:"bytes,3,opt,name=exchange_addr,json=exchangeAddr,proto3" json:"exchange_addr,omitempty"` // 可选，一般只有dex exchcange设置
	Market       common.Market     `protobuf:"varint,4,opt,name=market,proto3,enum=Market" json:"market,omitempty"`
	Type         common.SymbolType `protobuf:"varint,5,opt,name=type,proto3,enum=SymbolType" json:"type,omitempty"`
	Symbol       string            `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Bids         []*DepthLevel     `protobuf:"bytes,20,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks         []*DepthLevel     `protobuf:"bytes,21,rep,name=asks,proto3" json:"asks,omitempty"`
}

func (x *TraderReport) Reset() {
	*x = TraderReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depth_depth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraderReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderReport) ProtoMessage() {}

func (x *TraderReport) ProtoReflect() protoreflect.Message {
	mi := &file_depth_depth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderReport.ProtoReflect.Descriptor instead.
func (*TraderReport) Descriptor() ([]byte, []int) {
	return file_depth_depth_proto_rawDescGZIP(), []int{8}
}

func (x *TraderReport) GetHdr() *common.MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *TraderReport) GetExchange() common.Exchange {
	if x != nil {
		return x.Exchange
	}
	return common.Exchange(0)
}

func (x *TraderReport) GetExchangeAddr() string {
	if x != nil {
		return x.ExchangeAddr
	}
	return ""
}

func (x *TraderReport) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *TraderReport) GetType() common.SymbolType {
	if x != nil {
		return x.Type
	}
	return common.SymbolType(0)
}

func (x *TraderReport) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TraderReport) GetBids() []*DepthLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *TraderReport) GetAsks() []*DepthLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

var File_depth_depth_proto protoreflect.FileDescriptor

var file_depth_depth_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xf9, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x76, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x41, 0x76, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x05,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x03,
	0x68, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x74,
	0x68, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x41, 0x76, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x78, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x74, 0x22, 0xab,
	0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x76, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12,
	0x2b, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x8f, 0x01, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x22, 0x35,
	0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x22, 0xdc, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x64, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x03, 0x68, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x53, 0x69, 0x64, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x64, 0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x62, 0x69, 0x64,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x03,
	0x68, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x69, 0x64,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73,
	0x12, 0x25, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x3e, 0x0a, 0x16, 0x77, 0x61, 0x72, 0x6d, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x70, 0x74,
	0x68, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61,
	0x72, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_depth_depth_proto_rawDescOnce sync.Once
	file_depth_depth_proto_rawDescData = file_depth_depth_proto_rawDesc
)

func file_depth_depth_proto_rawDescGZIP() []byte {
	file_depth_depth_proto_rawDescOnce.Do(func() {
		file_depth_depth_proto_rawDescData = protoimpl.X.CompressGZIP(file_depth_depth_proto_rawDescData)
	})
	return file_depth_depth_proto_rawDescData
}

var file_depth_depth_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_depth_depth_proto_goTypes = []interface{}{
	(*DepthLevel)(nil),         // 0: depth.DepthLevel
	(*DepthLevelEx)(nil),       // 1: depth.DepthLevelEx
	(*Depth)(nil),              // 2: depth.Depth
	(*DepthRoute)(nil),         // 3: depth.DepthRoute
	(*CombinedDepthLevel)(nil), // 4: depth.CombinedDepthLevel
	(*UpdateTime)(nil),         // 5: depth.UpdateTime
	(*RouteSide)(nil),          // 6: depth.RouteSide
	(*CombinedDepth)(nil),      // 7: depth.CombinedDepth
	(*TraderReport)(nil),       // 8: depth.TraderReport
	(common.Exchange)(0),       // 9: Exchange
	(common.Market)(0),         // 10: Market
	(common.SymbolType)(0),     // 11: SymbolType
	(*common.MsgHeader)(nil),   // 12: MsgHeader
}
var file_depth_depth_proto_depIdxs = []int32{
	9,  // 0: depth.DepthLevelEx.exchange:type_name -> Exchange
	10, // 1: depth.DepthLevelEx.market:type_name -> Market
	11, // 2: depth.DepthLevelEx.type:type_name -> SymbolType
	12, // 3: depth.Depth.hdr:type_name -> MsgHeader
	9,  // 4: depth.Depth.exchange:type_name -> Exchange
	10, // 5: depth.Depth.market:type_name -> Market
	11, // 6: depth.Depth.type:type_name -> SymbolType
	0,  // 7: depth.Depth.bids:type_name -> depth.DepthLevel
	0,  // 8: depth.Depth.asks:type_name -> depth.DepthLevel
	9,  // 9: depth.DepthRoute.exchange:type_name -> Exchange
	1,  // 10: depth.DepthRoute.path:type_name -> depth.DepthLevelEx
	3,  // 11: depth.CombinedDepthLevel.amounts:type_name -> depth.DepthRoute
	12, // 12: depth.CombinedDepth.hdr:type_name -> MsgHeader
	9,  // 13: depth.CombinedDepth.exchange:type_name -> Exchange
	10, // 14: depth.CombinedDepth.market:type_name -> Market
	11, // 15: depth.CombinedDepth.type:type_name -> SymbolType
	6,  // 16: depth.CombinedDepth.route_side:type_name -> depth.RouteSide
	4,  // 17: depth.CombinedDepth.bids:type_name -> depth.CombinedDepthLevel
	4,  // 18: depth.CombinedDepth.asks:type_name -> depth.CombinedDepthLevel
	5,  // 19: depth.CombinedDepth.time_handle:type_name -> depth.UpdateTime
	12, // 20: depth.TraderReport.hdr:type_name -> MsgHeader
	9,  // 21: depth.TraderReport.exchange:type_name -> Exchange
	10, // 22: depth.TraderReport.market:type_name -> Market
	11, // 23: depth.TraderReport.type:type_name -> SymbolType
	0,  // 24: depth.TraderReport.bids:type_name -> depth.DepthLevel
	0,  // 25: depth.TraderReport.asks:type_name -> depth.DepthLevel
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_depth_depth_proto_init() }
func file_depth_depth_proto_init() {
	if File_depth_depth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_depth_depth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepthLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepthLevelEx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepthRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinedDepthLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinedDepth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depth_depth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraderReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_depth_depth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_depth_depth_proto_goTypes,
		DependencyIndexes: file_depth_depth_proto_depIdxs,
		MessageInfos:      file_depth_depth_proto_msgTypes,
	}.Build()
	File_depth_depth_proto = out.File
	file_depth_depth_proto_rawDesc = nil
	file_depth_depth_proto_goTypes = nil
	file_depth_depth_proto_depIdxs = nil
}
