// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: common/msg.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 非强制要求，消息解码除了heartbeat不依赖此枚举里的类型
// protobuf编码后little endian，消息头搜索7bcdcd可以识别出此消息
type MsgType int32

const (
	MsgType_INVALID_MSG_TYPE MsgType = 0
	MsgType_DPETH            MsgType = 281922939  // 行情，可以通过0x11,12,13等增加自类型，下同
	MsgType_ORDER            MsgType = 550358395  // 订单
	MsgType_BALANCE          MsgType = 818793851  // 资产
	MsgType_TRADE            MsgType = 1087229307 // 成交回报
	MsgType_RISKCTL          MsgType = 1355664763 // 风控
	MsgType_CONF             MsgType = 1624100219 // 配置
	// magic number
	MsgType_HEARTBEAT       MsgType = 2077085051
	MsgType_FIRST_SUBSCRIBE MsgType = 2077085052 // 用于首次订阅信息的回报
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0:          "INVALID_MSG_TYPE",
		281922939:  "DPETH",
		550358395:  "ORDER",
		818793851:  "BALANCE",
		1087229307: "TRADE",
		1355664763: "RISKCTL",
		1624100219: "CONF",
		2077085051: "HEARTBEAT",
		2077085052: "FIRST_SUBSCRIBE",
	}
	MsgType_value = map[string]int32{
		"INVALID_MSG_TYPE": 0,
		"DPETH":            281922939,
		"ORDER":            550358395,
		"BALANCE":          818793851,
		"TRADE":            1087229307,
		"RISKCTL":          1355664763,
		"CONF":             1624100219,
		"HEARTBEAT":        2077085051,
		"FIRST_SUBSCRIBE":  2077085052,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_msg_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_common_msg_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_common_msg_proto_rawDescGZIP(), []int{0}
}

// 消息头，pub发送的消息都需要包含此头部信息(包含在最开始)方便上下游交互
// 有副作用的req消息也需要此消息头
type MsgHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      uint32 `protobuf:"fixed32,1,opt,name=type,proto3" json:"type,omitempty"`           // 消息类型，仅供接收方参考
	Timestamp uint64 `protobuf:"fixed64,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 微秒时间戳，发送者设置 microsecond
	Sequence  int64  `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`    // 消息单调递增序列号，每个producer每个subject上单调递增
	Producer  []byte `protobuf:"bytes,4,opt,name=producer,proto3" json:"producer,omitempty"`     // 消息生产者唯一Id
	Uuid      []byte `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`             // 消息唯一id，发送者设置，如果要实现至少/恰好一次语义需要此uuid方便下游去重
}

func (x *MsgHeader) Reset() {
	*x = MsgHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHeader) ProtoMessage() {}

func (x *MsgHeader) ProtoReflect() protoreflect.Message {
	mi := &file_common_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHeader.ProtoReflect.Descriptor instead.
func (*MsgHeader) Descriptor() ([]byte, []int) {
	return file_common_msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgHeader) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MsgHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MsgHeader) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MsgHeader) GetProducer() []byte {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *MsgHeader) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

// 心跳消息，用于pub向sub定期发送，方便sub检测pub故障
type MsgHeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr *MsgHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	// 自定义，业务可能需要在心跳消息中存储数据
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MsgHeartBeat) Reset() {
	*x = MsgHeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHeartBeat) ProtoMessage() {}

func (x *MsgHeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_common_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHeartBeat.ProtoReflect.Descriptor instead.
func (*MsgHeartBeat) Descriptor() ([]byte, []int) {
	return file_common_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgHeartBeat) GetHdr() *MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *MsgHeartBeat) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_common_msg_proto protoreflect.FileDescriptor

var file_common_msg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x40,
	0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x1c,
	0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x73,
	0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x03, 0x68, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0xa8, 0x01, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x05, 0x44, 0x50, 0x45, 0x54, 0x48, 0x10, 0xfb, 0x9a, 0xb7, 0x86,
	0x01, 0x12, 0x0d, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0xfb, 0x9a, 0xb7, 0x86, 0x02,
	0x12, 0x0f, 0x0a, 0x07, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0xfb, 0x9a, 0xb7, 0x86,
	0x03, 0x12, 0x0d, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x44, 0x45, 0x10, 0xfb, 0x9a, 0xb7, 0x86, 0x04,
	0x12, 0x0f, 0x0a, 0x07, 0x52, 0x49, 0x53, 0x4b, 0x43, 0x54, 0x4c, 0x10, 0xfb, 0x9a, 0xb7, 0x86,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x43, 0x4f, 0x4e, 0x46, 0x10, 0xfb, 0x9a, 0xb7, 0x86, 0x06, 0x12,
	0x11, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0xfb, 0x9a, 0xb7,
	0xde, 0x07, 0x12, 0x17, 0x0a, 0x0f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0xfc, 0x9a, 0xb7, 0xde, 0x07, 0x42, 0x40, 0x0a, 0x17, 0x77,
	0x61, 0x72, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x72, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_msg_proto_rawDescOnce sync.Once
	file_common_msg_proto_rawDescData = file_common_msg_proto_rawDesc
)

func file_common_msg_proto_rawDescGZIP() []byte {
	file_common_msg_proto_rawDescOnce.Do(func() {
		file_common_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_msg_proto_rawDescData)
	})
	return file_common_msg_proto_rawDescData
}

var file_common_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_msg_proto_goTypes = []interface{}{
	(MsgType)(0),         // 0: MsgType
	(*MsgHeader)(nil),    // 1: MsgHeader
	(*MsgHeartBeat)(nil), // 2: MsgHeartBeat
}
var file_common_msg_proto_depIdxs = []int32{
	1, // 0: MsgHeartBeat.hdr:type_name -> MsgHeader
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_msg_proto_init() }
func file_common_msg_proto_init() {
	if File_common_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_msg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_msg_proto_goTypes,
		DependencyIndexes: file_common_msg_proto_depIdxs,
		EnumInfos:         file_common_msg_proto_enumTypes,
		MessageInfos:      file_common_msg_proto_msgTypes,
	}.Build()
	File_common_msg_proto = out.File
	file_common_msg_proto_rawDesc = nil
	file_common_msg_proto_goTypes = nil
	file_common_msg_proto_depIdxs = nil
}
