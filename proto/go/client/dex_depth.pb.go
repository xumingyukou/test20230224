// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: client/dex_depth.proto

package client

import (
	common "github.com/warmplanet/proto/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 统一转码后的uniswapv2数据
type DexDepth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr           *common.MsgHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Chain         common.Chain      `protobuf:"varint,2,opt,name=chain,proto3,enum=Chain" json:"chain,omitempty"`
	Symbol        string            `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeReceive   uint64            `protobuf:"fixed64,8,opt,name=time_receive,json=timeReceive,proto3" json:"time_receive,omitempty"` // microsecond
	TimeOperate   uint64            `protobuf:"fixed64,9,opt,name=time_operate,json=timeOperate,proto3" json:"time_operate,omitempty"` // microsecond
	BlockNumber   uint64            `protobuf:"varint,11,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime     uint64            `protobuf:"varint,12,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`               // second
	BlockTimeLast uint64            `protobuf:"varint,13,opt,name=block_time_last,json=blockTimeLast,proto3" json:"block_time_last,omitempty"` // second
	ReserveArb    float64           `protobuf:"fixed64,21,opt,name=reserve_arb,json=reserveArb,proto3" json:"reserve_arb,omitempty"`
	ReserveEntry  float64           `protobuf:"fixed64,22,opt,name=reserve_entry,json=reserveEntry,proto3" json:"reserve_entry,omitempty"`
}

func (x *DexDepth) Reset() {
	*x = DexDepth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_dex_depth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DexDepth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DexDepth) ProtoMessage() {}

func (x *DexDepth) ProtoReflect() protoreflect.Message {
	mi := &file_client_dex_depth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DexDepth.ProtoReflect.Descriptor instead.
func (*DexDepth) Descriptor() ([]byte, []int) {
	return file_client_dex_depth_proto_rawDescGZIP(), []int{0}
}

func (x *DexDepth) GetHdr() *common.MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *DexDepth) GetChain() common.Chain {
	if x != nil {
		return x.Chain
	}
	return common.Chain(0)
}

func (x *DexDepth) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DexDepth) GetTimeReceive() uint64 {
	if x != nil {
		return x.TimeReceive
	}
	return 0
}

func (x *DexDepth) GetTimeOperate() uint64 {
	if x != nil {
		return x.TimeOperate
	}
	return 0
}

func (x *DexDepth) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *DexDepth) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *DexDepth) GetBlockTimeLast() uint64 {
	if x != nil {
		return x.BlockTimeLast
	}
	return 0
}

func (x *DexDepth) GetReserveArb() float64 {
	if x != nil {
		return x.ReserveArb
	}
	return 0
}

func (x *DexDepth) GetReserveEntry() float64 {
	if x != nil {
		return x.ReserveEntry
	}
	return 0
}

// 统一转码后的uniswapv3数据
type DexDepthV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdr             *common.MsgHeader `protobuf:"bytes,1,opt,name=hdr,proto3" json:"hdr,omitempty"`
	Chain           common.Chain      `protobuf:"varint,2,opt,name=chain,proto3,enum=Chain" json:"chain,omitempty"`
	Symbol          string            `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimeReceive     uint64            `protobuf:"fixed64,8,opt,name=time_receive,json=timeReceive,proto3" json:"time_receive,omitempty"` // microsecond
	TimeOperate     uint64            `protobuf:"fixed64,9,opt,name=time_operate,json=timeOperate,proto3" json:"time_operate,omitempty"` // microsecond
	BlockNumber     uint64            `protobuf:"varint,11,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime       uint64            `protobuf:"varint,12,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`               // second
	BlockTimeLast   uint64            `protobuf:"varint,13,opt,name=block_time_last,json=blockTimeLast,proto3" json:"block_time_last,omitempty"` // second
	NeedReverse     bool              `protobuf:"varint,20,opt,name=need_reverse,json=needReverse,proto3" json:"need_reverse,omitempty"`
	SqrtPrice_96    string            `protobuf:"bytes,21,opt,name=sqrt_price_96,json=sqrtPrice96,proto3" json:"sqrt_price_96,omitempty"`
	Liquidity       string            `protobuf:"bytes,26,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	SpaceIndex      int64             `protobuf:"varint,22,opt,name=space_index,json=spaceIndex,proto3" json:"space_index,omitempty"`
	TickPacing      int64             `protobuf:"varint,27,opt,name=tick_pacing,json=tickPacing,proto3" json:"tick_pacing,omitempty"`
	CurrentTick     string            `protobuf:"bytes,23,opt,name=current_tick,json=currentTick,proto3" json:"current_tick,omitempty"`
	TickRange       []int64           `protobuf:"varint,24,rep,packed,name=tick_range,json=tickRange,proto3" json:"tick_range,omitempty"`
	LiquidityNetMap map[int64]string  `protobuf:"bytes,25,rep,name=liquidity_net_map,json=liquidityNetMap,proto3" json:"liquidity_net_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DexDepthV3) Reset() {
	*x = DexDepthV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_dex_depth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DexDepthV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DexDepthV3) ProtoMessage() {}

func (x *DexDepthV3) ProtoReflect() protoreflect.Message {
	mi := &file_client_dex_depth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DexDepthV3.ProtoReflect.Descriptor instead.
func (*DexDepthV3) Descriptor() ([]byte, []int) {
	return file_client_dex_depth_proto_rawDescGZIP(), []int{1}
}

func (x *DexDepthV3) GetHdr() *common.MsgHeader {
	if x != nil {
		return x.Hdr
	}
	return nil
}

func (x *DexDepthV3) GetChain() common.Chain {
	if x != nil {
		return x.Chain
	}
	return common.Chain(0)
}

func (x *DexDepthV3) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DexDepthV3) GetTimeReceive() uint64 {
	if x != nil {
		return x.TimeReceive
	}
	return 0
}

func (x *DexDepthV3) GetTimeOperate() uint64 {
	if x != nil {
		return x.TimeOperate
	}
	return 0
}

func (x *DexDepthV3) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *DexDepthV3) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *DexDepthV3) GetBlockTimeLast() uint64 {
	if x != nil {
		return x.BlockTimeLast
	}
	return 0
}

func (x *DexDepthV3) GetNeedReverse() bool {
	if x != nil {
		return x.NeedReverse
	}
	return false
}

func (x *DexDepthV3) GetSqrtPrice_96() string {
	if x != nil {
		return x.SqrtPrice_96
	}
	return ""
}

func (x *DexDepthV3) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *DexDepthV3) GetSpaceIndex() int64 {
	if x != nil {
		return x.SpaceIndex
	}
	return 0
}

func (x *DexDepthV3) GetTickPacing() int64 {
	if x != nil {
		return x.TickPacing
	}
	return 0
}

func (x *DexDepthV3) GetCurrentTick() string {
	if x != nil {
		return x.CurrentTick
	}
	return ""
}

func (x *DexDepthV3) GetTickRange() []int64 {
	if x != nil {
		return x.TickRange
	}
	return nil
}

func (x *DexDepthV3) GetLiquidityNetMap() map[int64]string {
	if x != nil {
		return x.LiquidityNetMap
	}
	return nil
}

var File_client_dex_depth_proto protoreflect.FileDescriptor

var file_client_dex_depth_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x02, 0x0a, 0x08, 0x44, 0x65,
	0x78, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x03, 0x68, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x72, 0x62, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x72, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x92, 0x05, 0x0a, 0x0a, 0x44, 0x65, 0x78, 0x44, 0x65, 0x70, 0x74, 0x68, 0x56, 0x33, 0x12,
	0x1c, 0x0a, 0x03, 0x68, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d,
	0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x03, 0x68, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x61, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x71, 0x72, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x39, 0x36, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x71, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x39, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63,
	0x6b, 0x5f, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x11,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x78, 0x44, 0x65, 0x70, 0x74, 0x68, 0x56, 0x33, 0x2e, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x74, 0x4d, 0x61,
	0x70, 0x1a, 0x42, 0x0a, 0x14, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x4e, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x40, 0x0a, 0x17, 0x77, 0x61, 0x72, 0x6d, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x72,
	0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_dex_depth_proto_rawDescOnce sync.Once
	file_client_dex_depth_proto_rawDescData = file_client_dex_depth_proto_rawDesc
)

func file_client_dex_depth_proto_rawDescGZIP() []byte {
	file_client_dex_depth_proto_rawDescOnce.Do(func() {
		file_client_dex_depth_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_dex_depth_proto_rawDescData)
	})
	return file_client_dex_depth_proto_rawDescData
}

var file_client_dex_depth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_client_dex_depth_proto_goTypes = []interface{}{
	(*DexDepth)(nil),         // 0: client.DexDepth
	(*DexDepthV3)(nil),       // 1: client.DexDepthV3
	nil,                      // 2: client.DexDepthV3.LiquidityNetMapEntry
	(*common.MsgHeader)(nil), // 3: MsgHeader
	(common.Chain)(0),        // 4: Chain
}
var file_client_dex_depth_proto_depIdxs = []int32{
	3, // 0: client.DexDepth.hdr:type_name -> MsgHeader
	4, // 1: client.DexDepth.chain:type_name -> Chain
	3, // 2: client.DexDepthV3.hdr:type_name -> MsgHeader
	4, // 3: client.DexDepthV3.chain:type_name -> Chain
	2, // 4: client.DexDepthV3.liquidity_net_map:type_name -> client.DexDepthV3.LiquidityNetMapEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_client_dex_depth_proto_init() }
func file_client_dex_depth_proto_init() {
	if File_client_dex_depth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_dex_depth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DexDepth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_dex_depth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DexDepthV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_dex_depth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_dex_depth_proto_goTypes,
		DependencyIndexes: file_client_dex_depth_proto_depIdxs,
		MessageInfos:      file_client_dex_depth_proto_msgTypes,
	}.Build()
	File_client_dex_depth_proto = out.File
	file_client_dex_depth_proto_rawDesc = nil
	file_client_dex_depth_proto_goTypes = nil
	file_client_dex_depth_proto_depIdxs = nil
}
