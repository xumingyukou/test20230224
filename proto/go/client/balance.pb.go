// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: client/balance.proto

package client

import (
	common "github.com/warmplanet/proto/go/common"
	order "github.com/warmplanet/proto/go/order"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositStatus int32

const (
	DepositStatus_DEPOSITSTATUS_INVALID   DepositStatus = 0
	DepositStatus_DEPOSITSTATUS_PENDING   DepositStatus = 1 //正在确认
	DepositStatus_DEPOSITSTATUS_CONFIRMED DepositStatus = 2 //已确认，但无法提币
	DepositStatus_DEPOSITSTATUS_SUCCESS   DepositStatus = 3 //完全成功
	DepositStatus_DEPOSITSTATUS_FAILED    DepositStatus = 4 //完全失败
)

// Enum value maps for DepositStatus.
var (
	DepositStatus_name = map[int32]string{
		0: "DEPOSITSTATUS_INVALID",
		1: "DEPOSITSTATUS_PENDING",
		2: "DEPOSITSTATUS_CONFIRMED",
		3: "DEPOSITSTATUS_SUCCESS",
		4: "DEPOSITSTATUS_FAILED",
	}
	DepositStatus_value = map[string]int32{
		"DEPOSITSTATUS_INVALID":   0,
		"DEPOSITSTATUS_PENDING":   1,
		"DEPOSITSTATUS_CONFIRMED": 2,
		"DEPOSITSTATUS_SUCCESS":   3,
		"DEPOSITSTATUS_FAILED":    4,
	}
)

func (x DepositStatus) Enum() *DepositStatus {
	p := new(DepositStatus)
	*p = x
	return p
}

func (x DepositStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_client_balance_proto_enumTypes[0].Descriptor()
}

func (DepositStatus) Type() protoreflect.EnumType {
	return &file_client_balance_proto_enumTypes[0]
}

func (x DepositStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositStatus.Descriptor instead.
func (DepositStatus) EnumDescriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{0}
}

type TransferStatus int32

const (
	TransferStatus_TRANSFERSTATUS_INVALID         TransferStatus = 0
	TransferStatus_TRANSFERSTATUS_CREATED         TransferStatus = 1 //已发送确认Email
	TransferStatus_TRANSFERSTATUS_WAITCERTIFICATE TransferStatus = 8 //等待身份认证
	TransferStatus_TRANSFERSTATUS_CANCELLED       TransferStatus = 2 //已被用户取消
	TransferStatus_TRANSFERSTATUS_CONFORMING      TransferStatus = 3 //等待确认
	TransferStatus_TRANSFERSTATUS_REJECTED        TransferStatus = 4 //被拒绝
	TransferStatus_TRANSFERSTATUS_PROCESSING      TransferStatus = 5 //处理中
	TransferStatus_TRANSFERSTATUS_FAILED          TransferStatus = 6 //提现交易失败
	TransferStatus_TRANSFERSTATUS_COMPLETE        TransferStatus = 7 //提现完成
)

// Enum value maps for TransferStatus.
var (
	TransferStatus_name = map[int32]string{
		0: "TRANSFERSTATUS_INVALID",
		1: "TRANSFERSTATUS_CREATED",
		8: "TRANSFERSTATUS_WAITCERTIFICATE",
		2: "TRANSFERSTATUS_CANCELLED",
		3: "TRANSFERSTATUS_CONFORMING",
		4: "TRANSFERSTATUS_REJECTED",
		5: "TRANSFERSTATUS_PROCESSING",
		6: "TRANSFERSTATUS_FAILED",
		7: "TRANSFERSTATUS_COMPLETE",
	}
	TransferStatus_value = map[string]int32{
		"TRANSFERSTATUS_INVALID":         0,
		"TRANSFERSTATUS_CREATED":         1,
		"TRANSFERSTATUS_WAITCERTIFICATE": 8,
		"TRANSFERSTATUS_CANCELLED":       2,
		"TRANSFERSTATUS_CONFORMING":      3,
		"TRANSFERSTATUS_REJECTED":        4,
		"TRANSFERSTATUS_PROCESSING":      5,
		"TRANSFERSTATUS_FAILED":          6,
		"TRANSFERSTATUS_COMPLETE":        7,
	}
)

func (x TransferStatus) Enum() *TransferStatus {
	p := new(TransferStatus)
	*p = x
	return p
}

func (x TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_client_balance_proto_enumTypes[1].Descriptor()
}

func (TransferStatus) Type() protoreflect.EnumType {
	return &file_client_balance_proto_enumTypes[1]
}

func (x TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus.Descriptor instead.
func (TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{1}
}

type MoveStatus int32

const (
	MoveStatus_MOVESTATUS_INVALID   MoveStatus = 0
	MoveStatus_MOVESTATUS_PENDING   MoveStatus = 1
	MoveStatus_MOVESTATUS_CONFIRMED MoveStatus = 2
	MoveStatus_MOVESTATUS_FAILED    MoveStatus = 3
)

// Enum value maps for MoveStatus.
var (
	MoveStatus_name = map[int32]string{
		0: "MOVESTATUS_INVALID",
		1: "MOVESTATUS_PENDING",
		2: "MOVESTATUS_CONFIRMED",
		3: "MOVESTATUS_FAILED",
	}
	MoveStatus_value = map[string]int32{
		"MOVESTATUS_INVALID":   0,
		"MOVESTATUS_PENDING":   1,
		"MOVESTATUS_CONFIRMED": 2,
		"MOVESTATUS_FAILED":    3,
	}
)

func (x MoveStatus) Enum() *MoveStatus {
	p := new(MoveStatus)
	*p = x
	return p
}

func (x MoveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MoveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_client_balance_proto_enumTypes[2].Descriptor()
}

func (MoveStatus) Type() protoreflect.EnumType {
	return &file_client_balance_proto_enumTypes[2]
}

func (x MoveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MoveStatus.Descriptor instead.
func (MoveStatus) EnumDescriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{2}
}

type MoveType int32

const (
	MoveType_MOVETYPE_INVALID MoveType = 0
	MoveType_MOVETYPE_IN      MoveType = 1
	MoveType_MOVETYPE_OUT     MoveType = 2
)

// Enum value maps for MoveType.
var (
	MoveType_name = map[int32]string{
		0: "MOVETYPE_INVALID",
		1: "MOVETYPE_IN",
		2: "MOVETYPE_OUT",
	}
	MoveType_value = map[string]int32{
		"MOVETYPE_INVALID": 0,
		"MOVETYPE_IN":      1,
		"MOVETYPE_OUT":     2,
	}
)

func (x MoveType) Enum() *MoveType {
	p := new(MoveType)
	*p = x
	return p
}

func (x MoveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MoveType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_balance_proto_enumTypes[3].Descriptor()
}

func (MoveType) Type() protoreflect.EnumType {
	return &file_client_balance_proto_enumTypes[3]
}

func (x MoveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MoveType.Descriptor instead.
func (MoveType) EnumDescriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{3}
}

type SpotBalanceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset  string  `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Total  float64 `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`
	Free   float64 `protobuf:"fixed64,3,opt,name=free,proto3" json:"free,omitempty"`
	Frozen float64 `protobuf:"fixed64,4,opt,name=frozen,proto3" json:"frozen,omitempty"`
}

func (x *SpotBalanceItem) Reset() {
	*x = SpotBalanceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpotBalanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotBalanceItem) ProtoMessage() {}

func (x *SpotBalanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotBalanceItem.ProtoReflect.Descriptor instead.
func (*SpotBalanceItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{0}
}

func (x *SpotBalanceItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *SpotBalanceItem) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SpotBalanceItem) GetFree() float64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *SpotBalanceItem) GetFrozen() float64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

type SpotBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateTime  int64              `protobuf:"varint,2,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // microsecond
	BalanceList []*SpotBalanceItem `protobuf:"bytes,1,rep,name=balance_list,json=balanceList,proto3" json:"balance_list,omitempty"`
	WalletList  []*SpotBalanceItem `protobuf:"bytes,3,rep,name=wallet_list,json=walletList,proto3" json:"wallet_list,omitempty"`
}

func (x *SpotBalance) Reset() {
	*x = SpotBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpotBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotBalance) ProtoMessage() {}

func (x *SpotBalance) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotBalance.ProtoReflect.Descriptor instead.
func (*SpotBalance) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{1}
}

func (x *SpotBalance) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SpotBalance) GetBalanceList() []*SpotBalanceItem {
	if x != nil {
		return x.BalanceList
	}
	return nil
}

func (x *SpotBalance) GetWalletList() []*SpotBalanceItem {
	if x != nil {
		return x.WalletList
	}
	return nil
}

type MarginBalanceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset    string  `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`                         //币种
	Total    float64 `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`                       //总资产=已借+用户资产+锁定
	Borrowed float64 `protobuf:"fixed64,3,opt,name=borrowed,proto3" json:"borrowed,omitempty"`                 //已借
	Free     float64 `protobuf:"fixed64,4,opt,name=free,proto3" json:"free,omitempty"`                         //可用=已借+用户资产
	Frozen   float64 `protobuf:"fixed64,5,opt,name=frozen,proto3" json:"frozen,omitempty"`                     //锁定
	NetAsset float64 `protobuf:"fixed64,6,opt,name=net_asset,json=netAsset,proto3" json:"net_asset,omitempty"` //用户资产
}

func (x *MarginBalanceItem) Reset() {
	*x = MarginBalanceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginBalanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginBalanceItem) ProtoMessage() {}

func (x *MarginBalanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginBalanceItem.ProtoReflect.Descriptor instead.
func (*MarginBalanceItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{2}
}

func (x *MarginBalanceItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *MarginBalanceItem) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MarginBalanceItem) GetBorrowed() float64 {
	if x != nil {
		return x.Borrowed
	}
	return 0
}

func (x *MarginBalanceItem) GetFree() float64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *MarginBalanceItem) GetFrozen() float64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *MarginBalanceItem) GetNetAsset() float64 {
	if x != nil {
		return x.NetAsset
	}
	return 0
}

type MarginIsolatedBalanceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAsset  *MarginBalanceItem `protobuf:"bytes,1,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset *MarginBalanceItem `protobuf:"bytes,2,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
}

func (x *MarginIsolatedBalanceItem) Reset() {
	*x = MarginIsolatedBalanceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginIsolatedBalanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginIsolatedBalanceItem) ProtoMessage() {}

func (x *MarginIsolatedBalanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginIsolatedBalanceItem.ProtoReflect.Descriptor instead.
func (*MarginIsolatedBalanceItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{3}
}

func (x *MarginIsolatedBalanceItem) GetBaseAsset() *MarginBalanceItem {
	if x != nil {
		return x.BaseAsset
	}
	return nil
}

func (x *MarginIsolatedBalanceItem) GetQuoteAsset() *MarginBalanceItem {
	if x != nil {
		return x.QuoteAsset
	}
	return nil
}

// 全仓
type MarginBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarginLevel         float64              `protobuf:"fixed64,1,opt,name=margin_level,json=marginLevel,proto3" json:"margin_level,omitempty"`                           //杠杆率=(用户总资产+已借)/已借
	TotalAsset          float64              `protobuf:"fixed64,7,opt,name=total_asset,json=totalAsset,proto3" json:"total_asset,omitempty"`                              //总资产=用户总资产+已借
	TotalNetAsset       float64              `protobuf:"fixed64,2,opt,name=total_net_asset,json=totalNetAsset,proto3" json:"total_net_asset,omitempty"`                   //已借
	TotalLiabilityAsset float64              `protobuf:"fixed64,3,opt,name=total_liability_asset,json=totalLiabilityAsset,proto3" json:"total_liability_asset,omitempty"` //用户总资产
	QuoteAsset          string               `protobuf:"bytes,4,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`                                // 计价币种
	UpdateTime          int64                `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                               // microsecond
	MarginBalanceList   []*MarginBalanceItem `protobuf:"bytes,5,rep,name=margin_balance_list,json=marginBalanceList,proto3" json:"margin_balance_list,omitempty"`
}

func (x *MarginBalance) Reset() {
	*x = MarginBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginBalance) ProtoMessage() {}

func (x *MarginBalance) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginBalance.ProtoReflect.Descriptor instead.
func (*MarginBalance) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{4}
}

func (x *MarginBalance) GetMarginLevel() float64 {
	if x != nil {
		return x.MarginLevel
	}
	return 0
}

func (x *MarginBalance) GetTotalAsset() float64 {
	if x != nil {
		return x.TotalAsset
	}
	return 0
}

func (x *MarginBalance) GetTotalNetAsset() float64 {
	if x != nil {
		return x.TotalNetAsset
	}
	return 0
}

func (x *MarginBalance) GetTotalLiabilityAsset() float64 {
	if x != nil {
		return x.TotalLiabilityAsset
	}
	return 0
}

func (x *MarginBalance) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *MarginBalance) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *MarginBalance) GetMarginBalanceList() []*MarginBalanceItem {
	if x != nil {
		return x.MarginBalanceList
	}
	return nil
}

// 逐仓
type MarginIsolatedBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNetAsset             float64                      `protobuf:"fixed64,2,opt,name=total_net_asset,json=totalNetAsset,proto3" json:"total_net_asset,omitempty"`                   //用户总资产
	TotalLiabilityAsset       float64                      `protobuf:"fixed64,3,opt,name=total_liability_asset,json=totalLiabilityAsset,proto3" json:"total_liability_asset,omitempty"` //总负债
	QuoteAsset                string                       `protobuf:"bytes,4,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`                                // 计价币种
	UpdateTime                int64                        `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                               // microsecond
	MarginIsolatedBalanceList []*MarginIsolatedBalanceItem `protobuf:"bytes,5,rep,name=margin_isolated_balance_list,json=marginIsolatedBalanceList,proto3" json:"margin_isolated_balance_list,omitempty"`
}

func (x *MarginIsolatedBalance) Reset() {
	*x = MarginIsolatedBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginIsolatedBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginIsolatedBalance) ProtoMessage() {}

func (x *MarginIsolatedBalance) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginIsolatedBalance.ProtoReflect.Descriptor instead.
func (*MarginIsolatedBalance) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{5}
}

func (x *MarginIsolatedBalance) GetTotalNetAsset() float64 {
	if x != nil {
		return x.TotalNetAsset
	}
	return 0
}

func (x *MarginIsolatedBalance) GetTotalLiabilityAsset() float64 {
	if x != nil {
		return x.TotalLiabilityAsset
	}
	return 0
}

func (x *MarginIsolatedBalance) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *MarginIsolatedBalance) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *MarginIsolatedBalance) GetMarginIsolatedBalanceList() []*MarginIsolatedBalanceItem {
	if x != nil {
		return x.MarginIsolatedBalanceList
	}
	return nil
}

type UBaseBalanceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string        `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`                 // u本位一般是稳定币
	Balance   float64       `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`           // 账户余额
	Market    common.Market `protobuf:"varint,10,opt,name=market,proto3,enum=Market" json:"market,omitempty"` // 划转的原始地交易区
	Unprofit  float64       `protobuf:"fixed64,5,opt,name=unprofit,proto3" json:"unprofit,omitempty"`         // 全仓持仓未实现盈亏
	Rights    float64       `protobuf:"fixed64,6,opt,name=rights,proto3" json:"rights,omitempty"`             // 总权益：balance+unprofit
	Available float64       `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`       // 下单可用余额
	Used      float64       `protobuf:"fixed64,4,opt,name=used,proto3" json:"used,omitempty"`                 // 已使用：rights-available
	Max_Withdraw float64 // 最大可转出余额，应该添加的值
}

func (x *UBaseBalanceItem) Reset() {
	*x = UBaseBalanceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UBaseBalanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UBaseBalanceItem) ProtoMessage() {}

func (x *UBaseBalanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UBaseBalanceItem.ProtoReflect.Descriptor instead.
func (*UBaseBalanceItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{6}
}

func (x *UBaseBalanceItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *UBaseBalanceItem) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *UBaseBalanceItem) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *UBaseBalanceItem) GetUnprofit() float64 {
	if x != nil {
		return x.Unprofit
	}
	return 0
}

func (x *UBaseBalanceItem) GetRights() float64 {
	if x != nil {
		return x.Rights
	}
	return 0
}

func (x *UBaseBalanceItem) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *UBaseBalanceItem) GetUsed() float64 {
	if x != nil {
		return x.Used
	}
	return 0
}

type UBasePositionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol         string            `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Position       float64           `protobuf:"fixed64,2,opt,name=position,proto3" json:"position,omitempty"`                                    // 持仓数量
	Side           order.TradeSide   `protobuf:"varint,7,opt,name=side,proto3,enum=order.TradeSide" json:"side,omitempty"`                        // 持仓方向
	Market         common.Market     `protobuf:"varint,10,opt,name=market,proto3,enum=Market" json:"market,omitempty"`                            // 交易区
	Type           common.SymbolType `protobuf:"varint,6,opt,name=type,proto3,enum=SymbolType" json:"type,omitempty"`                             // 交易类型
	CloseDate      string            `protobuf:"bytes,8,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`                   // 交割日期，格式0930，永续为空
	Price          float64           `protobuf:"fixed64,11,opt,name=price,proto3" json:"price,omitempty"`                                         // 持仓成本价格
	MaintainMargin float64           `protobuf:"fixed64,13,opt,name=maintain_margin,json=maintainMargin,proto3" json:"maintain_margin,omitempty"` // 维持保证金
	InitialMargin  float64           `protobuf:"fixed64,14,opt,name=initial_margin,json=initialMargin,proto3" json:"initial_margin,omitempty"`    // 初始保证金
	Notional       float64           `protobuf:"fixed64,15,opt,name=notional,proto3" json:"notional,omitempty"`                                   // 名义价值，以美金价值为单位的持仓数量
	Leverage       float64           `protobuf:"fixed64,12,opt,name=leverage,proto3" json:"leverage,omitempty"`                                   // 杠杆率
	Unprofit       float64           `protobuf:"fixed64,5,opt,name=unprofit,proto3" json:"unprofit,omitempty"`                                    // 全仓持仓未实现盈亏
}

func (x *UBasePositionItem) Reset() {
	*x = UBasePositionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UBasePositionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UBasePositionItem) ProtoMessage() {}

func (x *UBasePositionItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UBasePositionItem.ProtoReflect.Descriptor instead.
func (*UBasePositionItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{7}
}

func (x *UBasePositionItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *UBasePositionItem) GetPosition() float64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *UBasePositionItem) GetSide() order.TradeSide {
	if x != nil {
		return x.Side
	}
	return order.TradeSide(0)
}

func (x *UBasePositionItem) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *UBasePositionItem) GetType() common.SymbolType {
	if x != nil {
		return x.Type
	}
	return common.SymbolType(0)
}

func (x *UBasePositionItem) GetCloseDate() string {
	if x != nil {
		return x.CloseDate
	}
	return ""
}

func (x *UBasePositionItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UBasePositionItem) GetMaintainMargin() float64 {
	if x != nil {
		return x.MaintainMargin
	}
	return 0
}

func (x *UBasePositionItem) GetInitialMargin() float64 {
	if x != nil {
		return x.InitialMargin
	}
	return 0
}

func (x *UBasePositionItem) GetNotional() float64 {
	if x != nil {
		return x.Notional
	}
	return 0
}

func (x *UBasePositionItem) GetLeverage() float64 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

func (x *UBasePositionItem) GetUnprofit() float64 {
	if x != nil {
		return x.Unprofit
	}
	return 0
}

// U本位
type UBaseBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateTime         int64                `protobuf:"varint,1,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                            // microsecond
	Market             common.Market        `protobuf:"varint,10,opt,name=market,proto3,enum=Market" json:"market,omitempty"`                                         // 划转的原始地交易区
	Balance            float64              `protobuf:"fixed64,11,opt,name=balance,proto3" json:"balance,omitempty"`                                                  // 全仓账户余额
	Rights             float64              `protobuf:"fixed64,6,opt,name=rights,proto3" json:"rights,omitempty"`                                                     // 总权益：balance+unprofit
	Unprofit           float64              `protobuf:"fixed64,5,opt,name=unprofit,proto3" json:"unprofit,omitempty"`                                                 // 全仓持仓未实现盈亏
	Available          float64              `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`                                               // 下单可用余额
	TotalMarginBalance float64              `protobuf:"fixed64,2,opt,name=total_margin_balance,json=totalMarginBalance,proto3" json:"total_margin_balance,omitempty"` // 保证金总余额, 仅计算usdt资产
	Used               float64              `protobuf:"fixed64,4,opt,name=used,proto3" json:"used,omitempty"`                                                         // 已使用：rights-available
	UBaseBalanceList   []*UBaseBalanceItem  `protobuf:"bytes,21,rep,name=u_base_balance_list,json=uBaseBalanceList,proto3" json:"u_base_balance_list,omitempty"`
	UBasePositionList  []*UBasePositionItem `protobuf:"bytes,22,rep,name=u_base_position_list,json=uBasePositionList,proto3" json:"u_base_position_list,omitempty"`
}

func (x *UBaseBalance) Reset() {
	*x = UBaseBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UBaseBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UBaseBalance) ProtoMessage() {}

func (x *UBaseBalance) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UBaseBalance.ProtoReflect.Descriptor instead.
func (*UBaseBalance) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{8}
}

func (x *UBaseBalance) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *UBaseBalance) GetMarket() common.Market {
	if x != nil {
		return x.Market
	}
	return common.Market(0)
}

func (x *UBaseBalance) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *UBaseBalance) GetRights() float64 {
	if x != nil {
		return x.Rights
	}
	return 0
}

func (x *UBaseBalance) GetUnprofit() float64 {
	if x != nil {
		return x.Unprofit
	}
	return 0
}

func (x *UBaseBalance) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *UBaseBalance) GetTotalMarginBalance() float64 {
	if x != nil {
		return x.TotalMarginBalance
	}
	return 0
}

func (x *UBaseBalance) GetUsed() float64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *UBaseBalance) GetUBaseBalanceList() []*UBaseBalanceItem {
	if x != nil {
		return x.UBaseBalanceList
	}
	return nil
}

func (x *UBaseBalance) GetUBasePositionList() []*UBasePositionItem {
	if x != nil {
		return x.UBasePositionList
	}
	return nil
}

type DepositHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer  []byte        `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
	Id        int64         `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	IdEx      string        `protobuf:"bytes,3,opt,name=id_ex,json=idEx,proto3" json:"id_ex,omitempty"`
	StartTime int64         `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // millisecond
	EndTime   int64         `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // millisecond
	Asset     string        `protobuf:"bytes,6,opt,name=asset,proto3" json:"asset,omitempty"`
	Status    DepositStatus `protobuf:"varint,7,opt,name=status,proto3,enum=client.DepositStatus" json:"status,omitempty"`
}

func (x *DepositHistoryReq) Reset() {
	*x = DepositHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryReq) ProtoMessage() {}

func (x *DepositHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryReq.ProtoReflect.Descriptor instead.
func (*DepositHistoryReq) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{9}
}

func (x *DepositHistoryReq) GetProducer() []byte {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *DepositHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DepositHistoryReq) GetIdEx() string {
	if x != nil {
		return x.IdEx
	}
	return ""
}

func (x *DepositHistoryReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DepositHistoryReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DepositHistoryReq) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositHistoryReq) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_DEPOSITSTATUS_INVALID
}

type DepositHistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset      string        `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount     float64       `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Network    common.Chain  `protobuf:"varint,3,opt,name=network,proto3,enum=Chain" json:"network,omitempty"`
	Status     DepositStatus `protobuf:"varint,4,opt,name=status,proto3,enum=client.DepositStatus" json:"status,omitempty"`
	Address    string        `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	AddressTag string        `protobuf:"bytes,6,opt,name=address_tag,json=addressTag,proto3" json:"address_tag,omitempty"`
	TxId       string        `protobuf:"bytes,7,opt,name=txId,proto3" json:"txId,omitempty"`
	Timestamp  int64         `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //microsecond
}

func (x *DepositHistoryItem) Reset() {
	*x = DepositHistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryItem) ProtoMessage() {}

func (x *DepositHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryItem.ProtoReflect.Descriptor instead.
func (*DepositHistoryItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{10}
}

func (x *DepositHistoryItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *DepositHistoryItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositHistoryItem) GetNetwork() common.Chain {
	if x != nil {
		return x.Network
	}
	return common.Chain(0)
}

func (x *DepositHistoryItem) GetStatus() DepositStatus {
	if x != nil {
		return x.Status
	}
	return DepositStatus_DEPOSITSTATUS_INVALID
}

func (x *DepositHistoryItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DepositHistoryItem) GetAddressTag() string {
	if x != nil {
		return x.AddressTag
	}
	return ""
}

func (x *DepositHistoryItem) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *DepositHistoryItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DepositHistoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositList []*DepositHistoryItem `protobuf:"bytes,1,rep,name=deposit_list,json=depositList,proto3" json:"deposit_list,omitempty"`
}

func (x *DepositHistoryRsp) Reset() {
	*x = DepositHistoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositHistoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositHistoryRsp) ProtoMessage() {}

func (x *DepositHistoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositHistoryRsp.ProtoReflect.Descriptor instead.
func (*DepositHistoryRsp) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{11}
}

func (x *DepositHistoryRsp) GetDepositList() []*DepositHistoryItem {
	if x != nil {
		return x.DepositList
	}
	return nil
}

type TransferHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer  []byte         `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
	Id        int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	IdEx      string         `protobuf:"bytes,3,opt,name=id_ex,json=idEx,proto3" json:"id_ex,omitempty"`
	StartTime int64          `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` //millisecond
	EndTime   int64          `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       //millisecond
	Asset     string         `protobuf:"bytes,6,opt,name=asset,proto3" json:"asset,omitempty"`
	Status    TransferStatus `protobuf:"varint,7,opt,name=status,proto3,enum=client.TransferStatus" json:"status,omitempty"`
}

func (x *TransferHistoryReq) Reset() {
	*x = TransferHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistoryReq) ProtoMessage() {}

func (x *TransferHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistoryReq.ProtoReflect.Descriptor instead.
func (*TransferHistoryReq) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{12}
}

func (x *TransferHistoryReq) GetProducer() []byte {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *TransferHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransferHistoryReq) GetIdEx() string {
	if x != nil {
		return x.IdEx
	}
	return ""
}

func (x *TransferHistoryReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TransferHistoryReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TransferHistoryReq) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TransferHistoryReq) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_TRANSFERSTATUS_INVALID
}

type TransferHistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       string         `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Asset         string         `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount        float64        `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Network       common.Chain   `protobuf:"varint,5,opt,name=network,proto3,enum=Chain" json:"network,omitempty"`
	Status        TransferStatus `protobuf:"varint,6,opt,name=status,proto3,enum=client.TransferStatus" json:"status,omitempty"`
	Fee           float64        `protobuf:"fixed64,7,opt,name=fee,proto3" json:"fee,omitempty"`
	ConfirmNumber int64          `protobuf:"varint,8,opt,name=confirm_number,json=confirmNumber,proto3" json:"confirm_number,omitempty"`
	Info          string         `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`
	Address       string         `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	AddressTag    string         `protobuf:"bytes,11,opt,name=address_tag,json=addressTag,proto3" json:"address_tag,omitempty"`
	TxId          string         `protobuf:"bytes,12,opt,name=txId,proto3" json:"txId,omitempty"`
	Timestamp     int64          `protobuf:"varint,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // microsecond
}

func (x *TransferHistoryItem) Reset() {
	*x = TransferHistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistoryItem) ProtoMessage() {}

func (x *TransferHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistoryItem.ProtoReflect.Descriptor instead.
func (*TransferHistoryItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{13}
}

func (x *TransferHistoryItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransferHistoryItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *TransferHistoryItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferHistoryItem) GetNetwork() common.Chain {
	if x != nil {
		return x.Network
	}
	return common.Chain(0)
}

func (x *TransferHistoryItem) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_TRANSFERSTATUS_INVALID
}

func (x *TransferHistoryItem) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransferHistoryItem) GetConfirmNumber() int64 {
	if x != nil {
		return x.ConfirmNumber
	}
	return 0
}

func (x *TransferHistoryItem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *TransferHistoryItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransferHistoryItem) GetAddressTag() string {
	if x != nil {
		return x.AddressTag
	}
	return ""
}

func (x *TransferHistoryItem) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TransferHistoryItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TransferHistoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferList []*TransferHistoryItem `protobuf:"bytes,1,rep,name=transfer_list,json=transferList,proto3" json:"transfer_list,omitempty"`
}

func (x *TransferHistoryRsp) Reset() {
	*x = TransferHistoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistoryRsp) ProtoMessage() {}

func (x *TransferHistoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistoryRsp.ProtoReflect.Descriptor instead.
func (*TransferHistoryRsp) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{14}
}

func (x *TransferHistoryRsp) GetTransferList() []*TransferHistoryItem {
	if x != nil {
		return x.TransferList
	}
	return nil
}

type MoveHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Producer      []byte                  `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
	Id            int64                   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	IdEx          string                  `protobuf:"bytes,3,opt,name=id_ex,json=idEx,proto3" json:"id_ex,omitempty"`
	StartTime     int64                   `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                  // millisecond
	EndTime       int64                   `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                        // millisecond
	Source        common.Market           `protobuf:"varint,6,opt,name=source,proto3,enum=Market" json:"source,omitempty"`                                             // 划转的原始地交易区
	Target        common.Market           `protobuf:"varint,7,opt,name=target,proto3,enum=Market" json:"target,omitempty"`                                             // 划转的目的地交易区
	SymbolSource  string                  `protobuf:"bytes,8,opt,name=symbol_source,json=symbolSource,proto3" json:"symbol_source,omitempty"`                          // 用于逐仓杠杆的交易币种
	SymbolTarget  string                  `protobuf:"bytes,9,opt,name=symbol_target,json=symbolTarget,proto3" json:"symbol_target,omitempty"`                          // 用于逐仓杠杆的交易币种
	AccountSource string                  `protobuf:"bytes,10,opt,name=account_source,json=accountSource,proto3" json:"account_source,omitempty"`                      // 转账源子账户，含义和OrderMove一样
	AccountTarget string                  `protobuf:"bytes,11,opt,name=account_target,json=accountTarget,proto3" json:"account_target,omitempty"`                      // 转账目的子账户，含义和OrderMove一样
	ActionUser    order.OrderMoveUserType `protobuf:"varint,23,opt,name=action_user,json=actionUser,proto3,enum=order.OrderMoveUserType" json:"action_user,omitempty"` // 划转执行者
}

func (x *MoveHistoryReq) Reset() {
	*x = MoveHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveHistoryReq) ProtoMessage() {}

func (x *MoveHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveHistoryReq.ProtoReflect.Descriptor instead.
func (*MoveHistoryReq) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{15}
}

func (x *MoveHistoryReq) GetProducer() []byte {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *MoveHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MoveHistoryReq) GetIdEx() string {
	if x != nil {
		return x.IdEx
	}
	return ""
}

func (x *MoveHistoryReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MoveHistoryReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MoveHistoryReq) GetSource() common.Market {
	if x != nil {
		return x.Source
	}
	return common.Market(0)
}

func (x *MoveHistoryReq) GetTarget() common.Market {
	if x != nil {
		return x.Target
	}
	return common.Market(0)
}

func (x *MoveHistoryReq) GetSymbolSource() string {
	if x != nil {
		return x.SymbolSource
	}
	return ""
}

func (x *MoveHistoryReq) GetSymbolTarget() string {
	if x != nil {
		return x.SymbolTarget
	}
	return ""
}

func (x *MoveHistoryReq) GetAccountSource() string {
	if x != nil {
		return x.AccountSource
	}
	return ""
}

func (x *MoveHistoryReq) GetAccountTarget() string {
	if x != nil {
		return x.AccountTarget
	}
	return ""
}

func (x *MoveHistoryReq) GetActionUser() order.OrderMoveUserType {
	if x != nil {
		return x.ActionUser
	}
	return order.OrderMoveUserType(0)
}

type MoveHistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string     `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`                           // 资产
	Type      MoveType   `protobuf:"varint,6,opt,name=type,proto3,enum=client.MoveType" json:"type,omitempty"`       // 划转方向
	Id        string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                 // 划转ID
	Amount    float64    `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                       // 数量
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // 时间戳 microsecond
	Status    MoveStatus `protobuf:"varint,5,opt,name=status,proto3,enum=client.MoveStatus" json:"status,omitempty"` // PENDING (等待执行), CONFIRMED (成功划转), FAILED (执行失败);
}

func (x *MoveHistoryItem) Reset() {
	*x = MoveHistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveHistoryItem) ProtoMessage() {}

func (x *MoveHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveHistoryItem.ProtoReflect.Descriptor instead.
func (*MoveHistoryItem) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{16}
}

func (x *MoveHistoryItem) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *MoveHistoryItem) GetType() MoveType {
	if x != nil {
		return x.Type
	}
	return MoveType_MOVETYPE_INVALID
}

func (x *MoveHistoryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MoveHistoryItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MoveHistoryItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MoveHistoryItem) GetStatus() MoveStatus {
	if x != nil {
		return x.Status
	}
	return MoveStatus_MOVESTATUS_INVALID
}

type MoveHistoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveList []*MoveHistoryItem `protobuf:"bytes,1,rep,name=move_list,json=moveList,proto3" json:"move_list,omitempty"`
}

func (x *MoveHistoryRsp) Reset() {
	*x = MoveHistoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_balance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveHistoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveHistoryRsp) ProtoMessage() {}

func (x *MoveHistoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_balance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveHistoryRsp.ProtoReflect.Descriptor instead.
func (*MoveHistoryRsp) Descriptor() ([]byte, []int) {
	return file_client_balance_proto_rawDescGZIP(), []int{17}
}

func (x *MoveHistoryRsp) GetMoveList() []*MoveHistoryItem {
	if x != nil {
		return x.MoveList
	}
	return nil
}

var File_client_balance_proto protoreflect.FileDescriptor

var file_client_balance_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x0f, 0x53, 0x70, 0x6f, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x6f, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x70, 0x6f, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x4d,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x49, 0x73, 0x6f, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x38, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x11, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x49,
	0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x1c,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x19, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x49, 0x73, 0x6f,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xc9, 0x01, 0x0a, 0x10, 0x55, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75, 0x6e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x88, 0x03, 0x0a,
	0x11, 0x55, 0x42, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x5f,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x6e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75,
	0x6e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0x97, 0x03, 0x0a, 0x0c, 0x55, 0x42, 0x61, 0x73,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x75, 0x6e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x13,
	0x75, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x10, 0x75, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x14, 0x75, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11,
	0x75, 0x42, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x45, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x52, 0x0a, 0x11, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12,
	0x3d, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd5,
	0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x64, 0x45, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xea, 0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x56, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x0e,
	0x4d, 0x6f, 0x76, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x64,
	0x5f, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x45, 0x78, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x22, 0xbf,
	0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x46, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x97, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a,
	0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x2a, 0x9d, 0x02, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a,
	0x1e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x57, 0x41, 0x49, 0x54, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10,
	0x08, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1b,
	0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x07, 0x2a, 0x6d, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x56, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x56, 0x45,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x56, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f,
	0x56, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x2a, 0x43, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x4f, 0x56, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x56, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x56, 0x45, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x42, 0x40, 0x0a, 0x17, 0x77, 0x61, 0x72, 0x6d, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61,
	0x72, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_balance_proto_rawDescOnce sync.Once
	file_client_balance_proto_rawDescData = file_client_balance_proto_rawDesc
)

func file_client_balance_proto_rawDescGZIP() []byte {
	file_client_balance_proto_rawDescOnce.Do(func() {
		file_client_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_balance_proto_rawDescData)
	})
	return file_client_balance_proto_rawDescData
}

var file_client_balance_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_client_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_client_balance_proto_goTypes = []interface{}{
	(DepositStatus)(0),                // 0: client.DepositStatus
	(TransferStatus)(0),               // 1: client.TransferStatus
	(MoveStatus)(0),                   // 2: client.MoveStatus
	(MoveType)(0),                     // 3: client.MoveType
	(*SpotBalanceItem)(nil),           // 4: client.SpotBalanceItem
	(*SpotBalance)(nil),               // 5: client.SpotBalance
	(*MarginBalanceItem)(nil),         // 6: client.MarginBalanceItem
	(*MarginIsolatedBalanceItem)(nil), // 7: client.MarginIsolatedBalanceItem
	(*MarginBalance)(nil),             // 8: client.MarginBalance
	(*MarginIsolatedBalance)(nil),     // 9: client.MarginIsolatedBalance
	(*UBaseBalanceItem)(nil),          // 10: client.UBaseBalanceItem
	(*UBasePositionItem)(nil),         // 11: client.UBasePositionItem
	(*UBaseBalance)(nil),              // 12: client.UBaseBalance
	(*DepositHistoryReq)(nil),         // 13: client.DepositHistoryReq
	(*DepositHistoryItem)(nil),        // 14: client.DepositHistoryItem
	(*DepositHistoryRsp)(nil),         // 15: client.DepositHistoryRsp
	(*TransferHistoryReq)(nil),        // 16: client.TransferHistoryReq
	(*TransferHistoryItem)(nil),       // 17: client.TransferHistoryItem
	(*TransferHistoryRsp)(nil),        // 18: client.TransferHistoryRsp
	(*MoveHistoryReq)(nil),            // 19: client.MoveHistoryReq
	(*MoveHistoryItem)(nil),           // 20: client.MoveHistoryItem
	(*MoveHistoryRsp)(nil),            // 21: client.MoveHistoryRsp
	(common.Market)(0),                // 22: Market
	(order.TradeSide)(0),              // 23: order.TradeSide
	(common.SymbolType)(0),            // 24: SymbolType
	(common.Chain)(0),                 // 25: Chain
	(order.OrderMoveUserType)(0),      // 26: order.OrderMoveUserType
}
var file_client_balance_proto_depIdxs = []int32{
	4,  // 0: client.SpotBalance.balance_list:type_name -> client.SpotBalanceItem
	4,  // 1: client.SpotBalance.wallet_list:type_name -> client.SpotBalanceItem
	6,  // 2: client.MarginIsolatedBalanceItem.base_asset:type_name -> client.MarginBalanceItem
	6,  // 3: client.MarginIsolatedBalanceItem.quote_asset:type_name -> client.MarginBalanceItem
	6,  // 4: client.MarginBalance.margin_balance_list:type_name -> client.MarginBalanceItem
	7,  // 5: client.MarginIsolatedBalance.margin_isolated_balance_list:type_name -> client.MarginIsolatedBalanceItem
	22, // 6: client.UBaseBalanceItem.market:type_name -> Market
	23, // 7: client.UBasePositionItem.side:type_name -> order.TradeSide
	22, // 8: client.UBasePositionItem.market:type_name -> Market
	24, // 9: client.UBasePositionItem.type:type_name -> SymbolType
	22, // 10: client.UBaseBalance.market:type_name -> Market
	10, // 11: client.UBaseBalance.u_base_balance_list:type_name -> client.UBaseBalanceItem
	11, // 12: client.UBaseBalance.u_base_position_list:type_name -> client.UBasePositionItem
	0,  // 13: client.DepositHistoryReq.status:type_name -> client.DepositStatus
	25, // 14: client.DepositHistoryItem.network:type_name -> Chain
	0,  // 15: client.DepositHistoryItem.status:type_name -> client.DepositStatus
	14, // 16: client.DepositHistoryRsp.deposit_list:type_name -> client.DepositHistoryItem
	1,  // 17: client.TransferHistoryReq.status:type_name -> client.TransferStatus
	25, // 18: client.TransferHistoryItem.network:type_name -> Chain
	1,  // 19: client.TransferHistoryItem.status:type_name -> client.TransferStatus
	17, // 20: client.TransferHistoryRsp.transfer_list:type_name -> client.TransferHistoryItem
	22, // 21: client.MoveHistoryReq.source:type_name -> Market
	22, // 22: client.MoveHistoryReq.target:type_name -> Market
	26, // 23: client.MoveHistoryReq.action_user:type_name -> order.OrderMoveUserType
	3,  // 24: client.MoveHistoryItem.type:type_name -> client.MoveType
	2,  // 25: client.MoveHistoryItem.status:type_name -> client.MoveStatus
	20, // 26: client.MoveHistoryRsp.move_list:type_name -> client.MoveHistoryItem
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_client_balance_proto_init() }
func file_client_balance_proto_init() {
	if File_client_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpotBalanceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpotBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginBalanceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginIsolatedBalanceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginIsolatedBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UBaseBalanceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UBasePositionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UBaseBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositHistoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveHistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_balance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveHistoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_balance_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_balance_proto_goTypes,
		DependencyIndexes: file_client_balance_proto_depIdxs,
		EnumInfos:         file_client_balance_proto_enumTypes,
		MessageInfos:      file_client_balance_proto_msgTypes,
	}.Build()
	File_client_balance_proto = out.File
	file_client_balance_proto_rawDesc = nil
	file_client_balance_proto_goTypes = nil
	file_client_balance_proto_depIdxs = nil
}
