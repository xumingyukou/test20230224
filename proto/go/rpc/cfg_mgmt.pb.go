// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: rpc/cfg_mgmt.proto

package rpc

import (
	cfg "github.com/warmplanet/proto/go/cfg"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CfgMgmtRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code cfg.CfgRspCode     `protobuf:"varint,1,opt,name=code,proto3,enum=cfg.CfgRspCode" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Kvs  []*cfg.CfgKeyValue `protobuf:"bytes,10,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *CfgMgmtRsp) Reset() {
	*x = CfgMgmtRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtRsp) ProtoMessage() {}

func (x *CfgMgmtRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtRsp.ProtoReflect.Descriptor instead.
func (*CfgMgmtRsp) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{0}
}

func (x *CfgMgmtRsp) GetCode() cfg.CfgRspCode {
	if x != nil {
		return x.Code
	}
	return cfg.CfgRspCode(0)
}

func (x *CfgMgmtRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CfgMgmtRsp) GetKvs() []*cfg.CfgKeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type CfgMgmtHisRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       cfg.CfgRspCode     `protobuf:"varint,1,opt,name=code,proto3,enum=cfg.CfgRspCode" json:"code,omitempty"`
	Msg        string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	TotalCount int32              `protobuf:"varint,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总数量
	PageNo     int32              `protobuf:"varint,6,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`             // 当前页面
	Kvs        []*cfg.CfgKeyValue `protobuf:"bytes,10,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *CfgMgmtHisRsp) Reset() {
	*x = CfgMgmtHisRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtHisRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtHisRsp) ProtoMessage() {}

func (x *CfgMgmtHisRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtHisRsp.ProtoReflect.Descriptor instead.
func (*CfgMgmtHisRsp) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{1}
}

func (x *CfgMgmtHisRsp) GetCode() cfg.CfgRspCode {
	if x != nil {
		return x.Code
	}
	return cfg.CfgRspCode(0)
}

func (x *CfgMgmtHisRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CfgMgmtHisRsp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *CfgMgmtHisRsp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CfgMgmtHisRsp) GetKvs() []*cfg.CfgKeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type CfgMgmtKeysRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       cfg.CfgRspCode `protobuf:"varint,1,opt,name=code,proto3,enum=cfg.CfgRspCode" json:"code,omitempty"`
	Msg        string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	TotalCount int32          `protobuf:"varint,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总数量
	PageNo     int32          `protobuf:"varint,6,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`             // 当前页面
	Keys       []*cfg.CfgKey  `protobuf:"bytes,10,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CfgMgmtKeysRsp) Reset() {
	*x = CfgMgmtKeysRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtKeysRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtKeysRsp) ProtoMessage() {}

func (x *CfgMgmtKeysRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtKeysRsp.ProtoReflect.Descriptor instead.
func (*CfgMgmtKeysRsp) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{2}
}

func (x *CfgMgmtKeysRsp) GetCode() cfg.CfgRspCode {
	if x != nil {
		return x.Code
	}
	return cfg.CfgRspCode(0)
}

func (x *CfgMgmtKeysRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CfgMgmtKeysRsp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *CfgMgmtKeysRsp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CfgMgmtKeysRsp) GetKeys() []*cfg.CfgKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CfgMgmtHisGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant   string      `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group    string      `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	PageNo   int32       `protobuf:"varint,5,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32       `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Key      *cfg.CfgKey `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CfgMgmtHisGet) Reset() {
	*x = CfgMgmtHisGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtHisGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtHisGet) ProtoMessage() {}

func (x *CfgMgmtHisGet) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtHisGet.ProtoReflect.Descriptor instead.
func (*CfgMgmtHisGet) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{3}
}

func (x *CfgMgmtHisGet) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtHisGet) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtHisGet) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CfgMgmtHisGet) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CfgMgmtHisGet) GetKey() *cfg.CfgKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type CfgMgmtItemAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string             `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group  string             `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Kvs    []*cfg.CfgKeyValue `protobuf:"bytes,10,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *CfgMgmtItemAdd) Reset() {
	*x = CfgMgmtItemAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtItemAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtItemAdd) ProtoMessage() {}

func (x *CfgMgmtItemAdd) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtItemAdd.ProtoReflect.Descriptor instead.
func (*CfgMgmtItemAdd) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{4}
}

func (x *CfgMgmtItemAdd) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtItemAdd) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtItemAdd) GetKvs() []*cfg.CfgKeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type CfgMgmtItemDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string        `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group  string        `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Keys   []*cfg.CfgKey `protobuf:"bytes,10,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CfgMgmtItemDel) Reset() {
	*x = CfgMgmtItemDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtItemDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtItemDel) ProtoMessage() {}

func (x *CfgMgmtItemDel) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtItemDel.ProtoReflect.Descriptor instead.
func (*CfgMgmtItemDel) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{5}
}

func (x *CfgMgmtItemDel) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtItemDel) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtItemDel) GetKeys() []*cfg.CfgKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CfgMgmtItemGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string        `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group  string        `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Keys   []*cfg.CfgKey `protobuf:"bytes,10,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CfgMgmtItemGet) Reset() {
	*x = CfgMgmtItemGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtItemGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtItemGet) ProtoMessage() {}

func (x *CfgMgmtItemGet) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtItemGet.ProtoReflect.Descriptor instead.
func (*CfgMgmtItemGet) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{6}
}

func (x *CfgMgmtItemGet) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtItemGet) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtItemGet) GetKeys() []*cfg.CfgKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CfgMgmtKeysGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant   string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group    string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	PageNo   int32  `protobuf:"varint,5,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Prefix   string `protobuf:"bytes,10,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *CfgMgmtKeysGet) Reset() {
	*x = CfgMgmtKeysGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtKeysGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtKeysGet) ProtoMessage() {}

func (x *CfgMgmtKeysGet) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtKeysGet.ProtoReflect.Descriptor instead.
func (*CfgMgmtKeysGet) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{7}
}

func (x *CfgMgmtKeysGet) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtKeysGet) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtKeysGet) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CfgMgmtKeysGet) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CfgMgmtKeysGet) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type CfgMgmtTenantGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *CfgMgmtTenantGroup) Reset() {
	*x = CfgMgmtTenantGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtTenantGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtTenantGroup) ProtoMessage() {}

func (x *CfgMgmtTenantGroup) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtTenantGroup.ProtoReflect.Descriptor instead.
func (*CfgMgmtTenantGroup) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{8}
}

func (x *CfgMgmtTenantGroup) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtTenantGroup) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type CfgMgmtTenantBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CfgMgmtTenantBackup) Reset() {
	*x = CfgMgmtTenantBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtTenantBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtTenantBackup) ProtoMessage() {}

func (x *CfgMgmtTenantBackup) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtTenantBackup.ProtoReflect.Descriptor instead.
func (*CfgMgmtTenantBackup) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{9}
}

func (x *CfgMgmtTenantBackup) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtTenantBackup) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CfgMgmtTenantConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *CfgMgmtTenantConfig) Reset() {
	*x = CfgMgmtTenantConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtTenantConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtTenantConfig) ProtoMessage() {}

func (x *CfgMgmtTenantConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtTenantConfig.ProtoReflect.Descriptor instead.
func (*CfgMgmtTenantConfig) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{10}
}

func (x *CfgMgmtTenantConfig) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

type CfgMgmtGroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant              string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Group               string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	MaxHistory          int32  `protobuf:"varint,5,opt,name=max_history,json=maxHistory,proto3" json:"max_history,omitempty"`                            // 最大修改保存历史，-1表示不保存历史,0表示任意保存无限制
	DownstreamHeartbeat int32  `protobuf:"varint,6,opt,name=downstream_heartbeat,json=downstreamHeartbeat,proto3" json:"downstream_heartbeat,omitempty"` // 下游心跳时间间隔，秒
	UpstreamTimeout     int32  `protobuf:"varint,7,opt,name=upstream_timeout,json=upstreamTimeout,proto3" json:"upstream_timeout,omitempty"`             // 上游更新超时时间，秒，超过此时间没有更新，则停止向下游发送心跳消息
}

func (x *CfgMgmtGroupConfig) Reset() {
	*x = CfgMgmtGroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_cfg_mgmt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgMgmtGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgMgmtGroupConfig) ProtoMessage() {}

func (x *CfgMgmtGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_cfg_mgmt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgMgmtGroupConfig.ProtoReflect.Descriptor instead.
func (*CfgMgmtGroupConfig) Descriptor() ([]byte, []int) {
	return file_rpc_cfg_mgmt_proto_rawDescGZIP(), []int{11}
}

func (x *CfgMgmtGroupConfig) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *CfgMgmtGroupConfig) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CfgMgmtGroupConfig) GetMaxHistory() int32 {
	if x != nil {
		return x.MaxHistory
	}
	return 0
}

func (x *CfgMgmtGroupConfig) GetDownstreamHeartbeat() int32 {
	if x != nil {
		return x.DownstreamHeartbeat
	}
	return 0
}

func (x *CfgMgmtGroupConfig) GetUpstreamTimeout() int32 {
	if x != nil {
		return x.UpstreamTimeout
	}
	return 0
}

var File_rpc_cfg_mgmt_proto protoreflect.FileDescriptor

var file_rpc_cfg_mgmt_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x66, 0x67, 0x5f, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x0d, 0x63, 0x66, 0x67, 0x2f, 0x6d,
	0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x0a, 0x43, 0x66, 0x67, 0x4d,
	0x67, 0x6d, 0x74, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x52, 0x73,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a,
	0x03, 0x6b, 0x76, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x66, 0x67,
	0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6b, 0x76,
	0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x48, 0x69, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x52, 0x73, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x43, 0x66, 0x67,
	0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x66, 0x67, 0x2e,
	0x43, 0x66, 0x67, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x66, 0x67,
	0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x92, 0x01,
	0x0a, 0x0d, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x48, 0x69, 0x73, 0x47, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x62, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x22, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0x5f, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x4b, 0x65,
	0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x5f, 0x0a, 0x0e, 0x43, 0x66, 0x67, 0x4d, 0x67,
	0x6d, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x66, 0x67, 0x2e, 0x43, 0x66, 0x67, 0x4b,
	0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x66, 0x67,
	0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x42, 0x0a, 0x12, 0x43, 0x66, 0x67, 0x4d, 0x67,
	0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3f, 0x0a, 0x13, 0x43,
	0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x13,
	0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x12,
	0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x32,
	0x84, 0x04, 0x0a, 0x07, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66,
	0x67, 0x4d, 0x67, 0x6d, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x1a, 0x0f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c,
	0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x74, 0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67,
	0x6d, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x69, 0x73, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d,
	0x67, 0x6d, 0x74, 0x48, 0x69, 0x73, 0x47, 0x65, 0x74, 0x1a, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x48, 0x69, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x35, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x13, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x47, 0x65, 0x74, 0x1a,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67,
	0x4d, 0x67, 0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0f, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67,
	0x4d, 0x67, 0x6d, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x66, 0x67, 0x4d, 0x67, 0x6d,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x3a, 0x0a, 0x14, 0x77, 0x61, 0x72, 0x6d, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x22,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x72, 0x6d, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_cfg_mgmt_proto_rawDescOnce sync.Once
	file_rpc_cfg_mgmt_proto_rawDescData = file_rpc_cfg_mgmt_proto_rawDesc
)

func file_rpc_cfg_mgmt_proto_rawDescGZIP() []byte {
	file_rpc_cfg_mgmt_proto_rawDescOnce.Do(func() {
		file_rpc_cfg_mgmt_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_cfg_mgmt_proto_rawDescData)
	})
	return file_rpc_cfg_mgmt_proto_rawDescData
}

var file_rpc_cfg_mgmt_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_rpc_cfg_mgmt_proto_goTypes = []interface{}{
	(*CfgMgmtRsp)(nil),          // 0: rpc.CfgMgmtRsp
	(*CfgMgmtHisRsp)(nil),       // 1: rpc.CfgMgmtHisRsp
	(*CfgMgmtKeysRsp)(nil),      // 2: rpc.CfgMgmtKeysRsp
	(*CfgMgmtHisGet)(nil),       // 3: rpc.CfgMgmtHisGet
	(*CfgMgmtItemAdd)(nil),      // 4: rpc.CfgMgmtItemAdd
	(*CfgMgmtItemDel)(nil),      // 5: rpc.CfgMgmtItemDel
	(*CfgMgmtItemGet)(nil),      // 6: rpc.CfgMgmtItemGet
	(*CfgMgmtKeysGet)(nil),      // 7: rpc.CfgMgmtKeysGet
	(*CfgMgmtTenantGroup)(nil),  // 8: rpc.CfgMgmtTenantGroup
	(*CfgMgmtTenantBackup)(nil), // 9: rpc.CfgMgmtTenantBackup
	(*CfgMgmtTenantConfig)(nil), // 10: rpc.CfgMgmtTenantConfig
	(*CfgMgmtGroupConfig)(nil),  // 11: rpc.CfgMgmtGroupConfig
	(cfg.CfgRspCode)(0),         // 12: cfg.CfgRspCode
	(*cfg.CfgKeyValue)(nil),     // 13: cfg.CfgKeyValue
	(*cfg.CfgKey)(nil),          // 14: cfg.CfgKey
}
var file_rpc_cfg_mgmt_proto_depIdxs = []int32{
	12, // 0: rpc.CfgMgmtRsp.code:type_name -> cfg.CfgRspCode
	13, // 1: rpc.CfgMgmtRsp.kvs:type_name -> cfg.CfgKeyValue
	12, // 2: rpc.CfgMgmtHisRsp.code:type_name -> cfg.CfgRspCode
	13, // 3: rpc.CfgMgmtHisRsp.kvs:type_name -> cfg.CfgKeyValue
	12, // 4: rpc.CfgMgmtKeysRsp.code:type_name -> cfg.CfgRspCode
	14, // 5: rpc.CfgMgmtKeysRsp.keys:type_name -> cfg.CfgKey
	14, // 6: rpc.CfgMgmtHisGet.key:type_name -> cfg.CfgKey
	13, // 7: rpc.CfgMgmtItemAdd.kvs:type_name -> cfg.CfgKeyValue
	14, // 8: rpc.CfgMgmtItemDel.keys:type_name -> cfg.CfgKey
	14, // 9: rpc.CfgMgmtItemGet.keys:type_name -> cfg.CfgKey
	4,  // 10: rpc.CfgMgmt.AddItems:input_type -> rpc.CfgMgmtItemAdd
	5,  // 11: rpc.CfgMgmt.DelItems:input_type -> rpc.CfgMgmtItemDel
	6,  // 12: rpc.CfgMgmt.GetItems:input_type -> rpc.CfgMgmtItemGet
	3,  // 13: rpc.CfgMgmt.GetItemHis:input_type -> rpc.CfgMgmtHisGet
	7,  // 14: rpc.CfgMgmt.GetKeys:input_type -> rpc.CfgMgmtKeysGet
	10, // 15: rpc.CfgMgmt.CreateTenant:input_type -> rpc.CfgMgmtTenantConfig
	11, // 16: rpc.CfgMgmt.CreateGroup:input_type -> rpc.CfgMgmtGroupConfig
	8,  // 17: rpc.CfgMgmt.DeleteGroup:input_type -> rpc.CfgMgmtTenantGroup
	9,  // 18: rpc.CfgMgmt.BackupTenant:input_type -> rpc.CfgMgmtTenantBackup
	0,  // 19: rpc.CfgMgmt.AddItems:output_type -> rpc.CfgMgmtRsp
	0,  // 20: rpc.CfgMgmt.DelItems:output_type -> rpc.CfgMgmtRsp
	0,  // 21: rpc.CfgMgmt.GetItems:output_type -> rpc.CfgMgmtRsp
	1,  // 22: rpc.CfgMgmt.GetItemHis:output_type -> rpc.CfgMgmtHisRsp
	2,  // 23: rpc.CfgMgmt.GetKeys:output_type -> rpc.CfgMgmtKeysRsp
	0,  // 24: rpc.CfgMgmt.CreateTenant:output_type -> rpc.CfgMgmtRsp
	0,  // 25: rpc.CfgMgmt.CreateGroup:output_type -> rpc.CfgMgmtRsp
	0,  // 26: rpc.CfgMgmt.DeleteGroup:output_type -> rpc.CfgMgmtRsp
	0,  // 27: rpc.CfgMgmt.BackupTenant:output_type -> rpc.CfgMgmtRsp
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_rpc_cfg_mgmt_proto_init() }
func file_rpc_cfg_mgmt_proto_init() {
	if File_rpc_cfg_mgmt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_cfg_mgmt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtHisRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtKeysRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtHisGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtItemAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtItemDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtItemGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtKeysGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtTenantGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtTenantBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtTenantConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_cfg_mgmt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgMgmtGroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_cfg_mgmt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_cfg_mgmt_proto_goTypes,
		DependencyIndexes: file_rpc_cfg_mgmt_proto_depIdxs,
		MessageInfos:      file_rpc_cfg_mgmt_proto_msgTypes,
	}.Build()
	File_rpc_cfg_mgmt_proto = out.File
	file_rpc_cfg_mgmt_proto_rawDesc = nil
	file_rpc_cfg_mgmt_proto_goTypes = nil
	file_rpc_cfg_mgmt_proto_depIdxs = nil
}
